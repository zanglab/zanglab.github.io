#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 10, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(470, .7, legend=c(paste("t1/2 =", 66.9, "s"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
hydrolysis = read.csv("C:/Users/Student/Documents/Third Year/Spring/IDEAS/lab7/group06.csv")
names(hydrolysis) = c("Time (s)","A 260 nm") #Change the column names
hydrolysis = rbind(hydrolysis,c(-29,0))
hydrolysis$`Time (s)` <- hydrolysis$`Time (s)`+29 #Account for time difference
hydrolysis$logs = log(hydrolysis$`A 260 nm`) #Make a column for the guggenhiem
hydrolysis$delta = 0
for(i in c(1:30)){
hydrolysis$delta[i] = 0 - hydrolysis$`A 260 nm`[i] + hydrolysis$`A 260 nm`[i+30]
hydrolysis$logs[i] = log(hydrolysis$delta[i])
}
par(bg = "white")  #fancy plotting stuff
fit <- lm(logs ~ `Time (s)`, data = hydrolysis[1:30,])  #Find line of best fit
plot(hydrolysis$`Time (s)`,hydrolysis$logs,
xlim = c(0,300), xaxs="i", yaxs="i",
xlab = "Time (seconds)", ylab = "log(A 260 nm)", main="Guggenheim Processing",
col = c("purple"), pch = 18)
grid(NA, 12, lwd = 2)  #More fancy plotting stuff
abline(coef(fit)[1:2], col = 'red')
cf <- round(coef(fit), 5)
eq <- paste0("ln([A]) = ", ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), "*t ", cf[1])  #Get eqn
r2 = round(summary(fit)$r.squared,5)  #get r squared
r2 = paste0("R^2 = ", r2)
#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 10, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(460, .7, legend=c(paste("t1/2 =", 66.9, "s"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
hydrolysis = read.csv("C:/Users/Student/Documents/Third Year/Spring/IDEAS/lab7/group06.csv")
names(hydrolysis) = c("Time (s)","A 260 nm") #Change the column names
hydrolysis = rbind(hydrolysis,c(-29,0))
hydrolysis$`Time (s)` <- hydrolysis$`Time (s)`+29 #Account for time difference
hydrolysis$logs = log(hydrolysis$`A 260 nm`) #Make a column for the guggenhiem
hydrolysis$delta = 0
for(i in c(1:30)){
hydrolysis$delta[i] = 0 - hydrolysis$`A 260 nm`[i] + hydrolysis$`A 260 nm`[i+30]
hydrolysis$logs[i] = log(hydrolysis$delta[i])
}
par(bg = "white")  #fancy plotting stuff
fit <- lm(logs ~ `Time (s)`, data = hydrolysis[1:30,])  #Find line of best fit
plot(hydrolysis$`Time (s)`,hydrolysis$logs,
xlim = c(0,300), xaxs="i", yaxs="i",
xlab = "Time (seconds)", ylab = "log(A 260 nm)", main="Guggenheim Processing",
col = c("purple"), pch = 18)
grid(NA, 12, lwd = 2)  #More fancy plotting stuff
abline(coef(fit)[1:2], col = 'red')
cf <- round(coef(fit), 5)
eq <- paste0("ln([A]) = ", ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), "*t ", cf[1])  #Get eqn
r2 = round(summary(fit)$r.squared,5)  #get r squared
r2 = paste0("R^2 = ", r2)
#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 10, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(460, .7, legend=c(paste("t1/2"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
hydrolysis = read.csv("C:/Users/Student/Documents/Third Year/Spring/IDEAS/lab7/group06.csv")
names(hydrolysis) = c("Time (s)","A 260 nm") #Change the column names
hydrolysis = rbind(hydrolysis,c(-29,0))
hydrolysis$`Time (s)` <- hydrolysis$`Time (s)`+29 #Account for time difference
hydrolysis$logs = log(hydrolysis$`A 260 nm`) #Make a column for the guggenhiem
hydrolysis$delta = 0
for(i in c(1:30)){
hydrolysis$delta[i] = 0 - hydrolysis$`A 260 nm`[i] + hydrolysis$`A 260 nm`[i+30]
hydrolysis$logs[i] = log(hydrolysis$delta[i])
}
par(bg = "white")  #fancy plotting stuff
fit <- lm(logs ~ `Time (s)`, data = hydrolysis[1:30,])  #Find line of best fit
plot(hydrolysis$`Time (s)`,hydrolysis$logs,
xlim = c(0,300), xaxs="i", yaxs="i",
xlab = "Time (seconds)", ylab = "log(A 260 nm)", main="Guggenheim Processing",
col = c("purple"), pch = 18)
grid(NA, 12, lwd = 2)  #More fancy plotting stuff
abline(coef(fit)[1:2], col = 'red')
cf <- round(coef(fit), 5)
eq <- paste0("ln([A]) = ", ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), "*t ", cf[1])  #Get eqn
r2 = round(summary(fit)$r.squared,5)  #get r squared
r2 = paste0("R^2 = ", r2)
#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 10, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(460, .75, legend=c(paste("t1/2"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
hydrolysis = read.csv("C:/Users/Student/Documents/Third Year/Spring/IDEAS/lab7/group06.csv")
names(hydrolysis) = c("Time (s)","A 260 nm") #Change the column names
hydrolysis = rbind(hydrolysis,c(-29,0))
hydrolysis$`Time (s)` <- hydrolysis$`Time (s)`+29 #Account for time difference
hydrolysis$logs = log(hydrolysis$`A 260 nm`) #Make a column for the guggenhiem
hydrolysis$delta = 0
for(i in c(1:30)){
hydrolysis$delta[i] = 0 - hydrolysis$`A 260 nm`[i] + hydrolysis$`A 260 nm`[i+30]
hydrolysis$logs[i] = log(hydrolysis$delta[i])
}
par(bg = "white")  #fancy plotting stuff
fit <- lm(logs ~ `Time (s)`, data = hydrolysis[1:30,])  #Find line of best fit
plot(hydrolysis$`Time (s)`,hydrolysis$logs,
xlim = c(0,300), xaxs="i", yaxs="i",
xlab = "Time (seconds)", ylab = "log(A 260 nm)", main="Guggenheim Processing",
col = c("purple"), pch = 18)
grid(NA, 12, lwd = 2)  #More fancy plotting stuff
abline(coef(fit)[1:2], col = 'red')
cf <- round(coef(fit), 5)
eq <- paste0("ln([A]) = ", ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), "*t ", cf[1])  #Get eqn
r2 = round(summary(fit)$r.squared,5)  #get r squared
r2 = paste0("R^2 = ", r2)
#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 9, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(460, .75, legend=c(paste("t1/2"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
hydrolysis = read.csv("C:/Users/Student/Documents/Third Year/Spring/IDEAS/lab7/group06.csv")
names(hydrolysis) = c("Time (s)","A 260 nm") #Change the column names
hydrolysis = rbind(hydrolysis,c(-29,0))
hydrolysis$`Time (s)` <- hydrolysis$`Time (s)`+29 #Account for time difference
hydrolysis$logs = log(hydrolysis$`A 260 nm`) #Make a column for the guggenhiem
hydrolysis$delta = 0
for(i in c(1:30)){
hydrolysis$delta[i] = 0 - hydrolysis$`A 260 nm`[i] + hydrolysis$`A 260 nm`[i+30]
hydrolysis$logs[i] = log(hydrolysis$delta[i])
}
par(bg = "white")  #fancy plotting stuff
fit <- lm(logs ~ `Time (s)`, data = hydrolysis[1:30,])  #Find line of best fit
plot(hydrolysis$`Time (s)`,hydrolysis$logs,
xlim = c(0,300), xaxs="i", yaxs="i",
xlab = "Time (seconds)", ylab = "log(A 260 nm)", main="Guggenheim Processing",
col = c("purple"), pch = 18)
grid(NA, 12, lwd = 2)  #More fancy plotting stuff
abline(coef(fit)[1:2], col = 'red')
cf <- round(coef(fit), 5)
eq <- paste0("ln([A]) = ", ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), "*t ", cf[1])  #Get eqn
r2 = round(summary(fit)$r.squared,5)  #get r squared
r2 = paste0("R^2 = ", r2)
#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 18, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(460, .75, legend=c(paste("t1/2"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
hydrolysis = read.csv("C:/Users/Student/Documents/Third Year/Spring/IDEAS/lab7/group06.csv")
names(hydrolysis) = c("Time (s)","A 260 nm") #Change the column names
hydrolysis = rbind(hydrolysis,c(-29,0))
hydrolysis$`Time (s)` <- hydrolysis$`Time (s)`+29 #Account for time difference
hydrolysis$logs = log(hydrolysis$`A 260 nm`) #Make a column for the guggenhiem
hydrolysis$delta = 0
for(i in c(1:30)){
hydrolysis$delta[i] = 0 - hydrolysis$`A 260 nm`[i] + hydrolysis$`A 260 nm`[i+30]
hydrolysis$logs[i] = log(hydrolysis$delta[i])
}
par(bg = "white")  #fancy plotting stuff
fit <- lm(logs ~ `Time (s)`, data = hydrolysis[1:30,])  #Find line of best fit
plot(hydrolysis$`Time (s)`,hydrolysis$logs,
xlim = c(0,300), xaxs="i", yaxs="i",
xlab = "Time (seconds)", ylab = "log(A 260 nm)", main="Guggenheim Processing",
col = c("purple"), pch = 18)
grid(NA, 12, lwd = 2)  #More fancy plotting stuff
abline(coef(fit)[1:2], col = 'red')
cf <- round(coef(fit), 5)
eq <- paste0("ln([A]) = ", ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), "*t ", cf[1])  #Get eqn
r2 = round(summary(fit)$r.squared,5)  #get r squared
r2 = paste0("R^2 = ", r2)
#Display Equations
mtext(eq, 3, line=-2)
mtext(r2, 3, line=-3.5)
plot(hydrolysis$`Time (s)`,hydrolysis$`A 260 nm`,
ylim = c(.4,0.85), yaxs="i",xlim = c(0,700), xaxs="i",
xlab = "Time (seconds)", ylab = "A 260 nm", main="Hydrolysis Kinetics",
col = c("black"), pch = 18)
grid(NA, 9, lwd = 2) #More fancy plotting stuff
abline(v = log(2)/abs(cf[2]), col="blue")
abline(v = 444.5, col="red")
legend(460, .75, legend=c(paste("t1/2"), "Completion Time"),
col=c("blue","red"), lty=1, cex=0.8)
install.packages("RColorBrewer")
source('http://bioconductor.org/biocLite.R')
biocLite('SRAdb')
library(SRAdb)
srafile = getSRAdbFile()
library(Bioconductor)
BiocManager::install(SRAdb)
BiocManager::install('SRAdb')
library(SRAdb)
srafile = geSRAdbFile()
srafile = getSRAdbFile()
load("~/Third Year/Spring/bart_results_website/.RData")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
`Cancer Types` = cancers
#---------------------------
#now we have all the data we need
#---------------------------
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/scatterPlots")
for(i in 1:length(rownames(bartTFs))){
toCheck = bart_res_TFs[i];
if(toCheck %in% logBLCA$geneSymbol && toCheck %in% likelihood_TFs){
addBLCA = mean(t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6))
addBRCA_1 = mean(t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6))
addBRCA_2 = mean(t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6))
addCOAD_READ = mean(t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6))
addHNSC = mean(t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6))
addKICH = mean(t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6))
addKIRC = mean(t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6))
addKIRP = mean(t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6))
addLIHC = mean(t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6))
addLUAD = mean(t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6))
addLUSC = mean(t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6))
addPRAD = mean(t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6))
addSTES = mean(t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6))
addTHCA = mean(t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6))
addUCEC = mean(t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6))
toDisp <- c(addBLCA,addBRCA_1,addBRCA_2,addCOAD_READ,addHNSC,
addKICH,addKIRC,addKIRP,addLIHC,addLUAD,
addLUSC,addPRAD,addSTES,addTHCA,addUCEC)
likelihoods = as.numeric(as.vector(likelihood_table[toCheck,]))
barts = as.numeric(as.vector(bart_tf_df[toCheck,]))
toPlot = as.data.frame(cbind(likelihoods,barts,toDisp))
colnames(toPlot) = c("likelihood","bart","expr")
toPlot = cbind(toPlot, rank(-toPlot$expr))
colnames(toPlot) = c("likelihood","bart","expr","rank_size")
ggplot(toPlot, aes(x=likelihood, y=bart, size = rank_size, fill=`Cancer Types`)) +
geom_point(alpha = 0.7, aes(colour=`Cancer Types`)) +
guides(col = guide_legend(ncol = 2)) +
scale_colour_manual(values = colors) +
scale_size(range = c(18, 2), name = "Relative Rank\nof Expression") +
ylab("Relative Rank Score (BART)") +
xlab("Likelihood Ratio Score") +
xlim(c(0,1)) + ylim(c(0,1)) +
theme_bw() +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10),
plot.title = element_text(face="bold", size = 16), axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13)) +
coord_fixed(ratio = 1) +
ggtitle(paste("Correlation between Bart Rank, Likelihood\nRatio, and Expression Level of", toCheck))+
guides(colour = guide_legend(override.aes = list(size=6)))
ggsave(paste(toCheck,'_scatter.png',sep = ""))
} else if(toCheck %in% logBLCA$geneSymbol){
addBLCA = mean(t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6))
addBRCA_1 = mean(t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6))
addBRCA_2 = mean(t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6))
addCOAD_READ = mean(t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6))
addHNSC = mean(t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6))
addKICH = mean(t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6))
addKIRC = mean(t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6))
addKIRP = mean(t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6))
addLIHC = mean(t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6))
addLUAD = mean(t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6))
addLUSC = mean(t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6))
addPRAD = mean(t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6))
addSTES = mean(t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6))
addTHCA = mean(t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6))
addUCEC = mean(t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6))
toDisp <- c(addBLCA,addBRCA_1,addBRCA_2,addCOAD_READ,addHNSC,
addKICH,addKIRC,addKIRP,addLIHC,addLUAD,
addLUSC,addPRAD,addSTES,addTHCA,addUCEC)
likelihoods = c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
barts = as.numeric(as.vector(bart_tf_df[toCheck,]))
toPlot = as.data.frame(cbind(likelihoods,barts,toDisp))
colnames(toPlot) = c("likelihood","bart","expr")
toPlot = cbind(toPlot, rank(-toPlot$expr))
colnames(toPlot) = c("likelihood","bart","expr","rank_size")
ggplot(toPlot, aes(x=likelihood, y=bart, size = rank_size, fill=`Cancer Types`)) +
geom_point(alpha = 0.7, aes(colour=`Cancer Types`)) +
guides(col = guide_legend(ncol = 2)) +
scale_colour_manual(values = colors) +
scale_size(range = c(18, 2), name = "Relative Rank\nof Expression") +
ylab("Relative Rank Score (BART)") +
xlim(c(0,1)) + ylim(c(0,1)) +
theme_bw() +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10),
plot.title = element_text(face="bold", size = 16), axis.title.x = element_blank(),
axis.title.y = element_text(size=13), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
coord_fixed(ratio = 1) +
ggtitle(paste("Correlation between Bart Rank\nand Expression Level of", toCheck))+
guides(colour = guide_legend(override.aes = list(size=6)))
ggsave(paste(toCheck,'_scatter.png',sep = ""))
}
}
library("org.Hs.eg.db")
library("ggplot2")
library("dplyr")
library("grid")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
`Cancer Types` = cancers
#---------------------------
#now we have all the data we need
#---------------------------
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/scatterPlots")
for(i in 1:length(rownames(bartTFs))){
toCheck = bart_res_TFs[i];
if(toCheck %in% logBLCA$geneSymbol && toCheck %in% likelihood_TFs){
addBLCA = mean(t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6))
addBRCA_1 = mean(t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6))
addBRCA_2 = mean(t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6))
addCOAD_READ = mean(t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6))
addHNSC = mean(t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6))
addKICH = mean(t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6))
addKIRC = mean(t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6))
addKIRP = mean(t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6))
addLIHC = mean(t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6))
addLUAD = mean(t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6))
addLUSC = mean(t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6))
addPRAD = mean(t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6))
addSTES = mean(t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6))
addTHCA = mean(t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6))
addUCEC = mean(t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6))
toDisp <- c(addBLCA,addBRCA_1,addBRCA_2,addCOAD_READ,addHNSC,
addKICH,addKIRC,addKIRP,addLIHC,addLUAD,
addLUSC,addPRAD,addSTES,addTHCA,addUCEC)
likelihoods = as.numeric(as.vector(likelihood_table[toCheck,]))
barts = as.numeric(as.vector(bart_tf_df[toCheck,]))
toPlot = as.data.frame(cbind(likelihoods,barts,toDisp))
colnames(toPlot) = c("likelihood","bart","expr")
toPlot = cbind(toPlot, rank(-toPlot$expr))
colnames(toPlot) = c("likelihood","bart","expr","rank_size")
ggplot(toPlot, aes(x=likelihood, y=bart, size = rank_size, fill=`Cancer Types`)) +
geom_point(alpha = 0.7, aes(colour=`Cancer Types`)) +
guides(col = guide_legend(ncol = 2)) +
scale_colour_manual(values = colors) +
scale_size(range = c(18, 2), name = "Relative Rank\nof Expression") +
ylab("Relative Rank Score (BART)") +
xlab("Likelihood Ratio Score") +
xlim(c(0,1)) + ylim(c(0,1)) +
theme_bw() +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10),
plot.title = element_text(face="bold", size = 16), axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13)) +
coord_fixed(ratio = 1) +
ggtitle(paste("Correlation between Bart Rank, Likelihood\nRatio, and Expression Level of", toCheck))+
guides(colour = guide_legend(override.aes = list(size=6)))
ggsave(paste(toCheck,'_scatter.png',sep = ""))
} else if(toCheck %in% logBLCA$geneSymbol){
addBLCA = mean(t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6))
addBRCA_1 = mean(t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6))
addBRCA_2 = mean(t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6))
addCOAD_READ = mean(t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6))
addHNSC = mean(t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6))
addKICH = mean(t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6))
addKIRC = mean(t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6))
addKIRP = mean(t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6))
addLIHC = mean(t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6))
addLUAD = mean(t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6))
addLUSC = mean(t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6))
addPRAD = mean(t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6))
addSTES = mean(t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6))
addTHCA = mean(t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6))
addUCEC = mean(t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6))
toDisp <- c(addBLCA,addBRCA_1,addBRCA_2,addCOAD_READ,addHNSC,
addKICH,addKIRC,addKIRP,addLIHC,addLUAD,
addLUSC,addPRAD,addSTES,addTHCA,addUCEC)
likelihoods = c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
barts = as.numeric(as.vector(bart_tf_df[toCheck,]))
toPlot = as.data.frame(cbind(likelihoods,barts,toDisp))
colnames(toPlot) = c("likelihood","bart","expr")
toPlot = cbind(toPlot, rank(-toPlot$expr))
colnames(toPlot) = c("likelihood","bart","expr","rank_size")
ggplot(toPlot, aes(x=likelihood, y=bart, size = rank_size, fill=`Cancer Types`)) +
geom_point(alpha = 0.7, aes(colour=`Cancer Types`)) +
guides(col = guide_legend(ncol = 2)) +
scale_colour_manual(values = colors) +
scale_size(range = c(18, 2), name = "Relative Rank\nof Expression") +
ylab("Relative Rank Score (BART)") +
xlim(c(0,1)) + ylim(c(0,1)) +
theme_bw() +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10),
plot.title = element_text(face="bold", size = 16), axis.title.x = element_blank(),
axis.title.y = element_text(size=13), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
coord_fixed(ratio = 1) +
ggtitle(paste("Correlation between Bart Rank\nand Expression Level of", toCheck))+
guides(colour = guide_legend(override.aes = list(size=6)))
ggsave(paste(toCheck,'_scatter.png',sep = ""))
}
}
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/scatterPlots")
for(i in 1:length(rownames(bartTFs))){
toCheck = bart_res_TFs[i];
if(toCheck %in% logBLCA$geneSymbol && toCheck %in% likelihood_TFs){
addBLCA = mean(t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6))
addBRCA_1 = mean(t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6))
addBRCA_2 = mean(t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6))
addCOAD_READ = mean(t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6))
addHNSC = mean(t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6))
addKICH = mean(t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6))
addKIRC = mean(t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6))
addKIRP = mean(t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6))
addLIHC = mean(t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6))
addLUAD = mean(t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6))
addLUSC = mean(t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6))
addPRAD = mean(t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6))
addSTES = mean(t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6))
addTHCA = mean(t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6))
addUCEC = mean(t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6))
toDisp <- c(addBLCA,addBRCA_1,addBRCA_2,addCOAD_READ,addHNSC,
addKICH,addKIRC,addKIRP,addLIHC,addLUAD,
addLUSC,addPRAD,addSTES,addTHCA,addUCEC)
likelihoods = as.numeric(as.vector(likelihood_table[toCheck,]))
barts = as.numeric(as.vector(bart_tf_df[toCheck,]))
toPlot = as.data.frame(cbind(likelihoods,barts,toDisp))
colnames(toPlot) = c("likelihood","bart","expr")
toPlot = cbind(toPlot, rank(-toPlot$expr))
colnames(toPlot) = c("likelihood","bart","expr","rank_size")
ggplot(toPlot, aes(x=likelihood, y=bart, size = rank_size, fill=`Cancer Types`)) +
geom_point(alpha = 0.7, aes(colour=`Cancer Types`)) +
guides(col = guide_legend(ncol = 2)) +
scale_colour_manual(values = colors) +
scale_size(range = c(18, 2), name = "Relative Rank\nof Expression") +
ylab("Relative Rank Score (BART)") +
xlab("Likelihood Ratio Score") +
xlim(c(0,1)) + ylim(c(0,1)) +
theme_bw() +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10),
plot.title = element_text(face="bold", size = 16), axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13)) +
coord_fixed(ratio = 1) +
ggtitle(paste("Correlation between Bart Rank, Likelihood\nRatio, and Expression Level of", toCheck))+
guides(colour = guide_legend(override.aes = list(size=6)))
ggsave(paste(toCheck,'_scatter.png',sep = ""))
} else if(toCheck %in% logBLCA$geneSymbol){
addBLCA = mean(t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6))
addBRCA_1 = mean(t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6))
addBRCA_2 = mean(t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6))
addCOAD_READ = mean(t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6))
addHNSC = mean(t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6))
addKICH = mean(t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6))
addKIRC = mean(t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6))
addKIRP = mean(t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6))
addLIHC = mean(t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6))
addLUAD = mean(t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6))
addLUSC = mean(t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6))
addPRAD = mean(t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6))
addSTES = mean(t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6))
addTHCA = mean(t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6))
addUCEC = mean(t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6))
toDisp <- c(addBLCA,addBRCA_1,addBRCA_2,addCOAD_READ,addHNSC,
addKICH,addKIRC,addKIRP,addLIHC,addLUAD,
addLUSC,addPRAD,addSTES,addTHCA,addUCEC)
likelihoods = c(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
barts = as.numeric(as.vector(bart_tf_df[toCheck,]))
toPlot = as.data.frame(cbind(likelihoods,barts,toDisp))
colnames(toPlot) = c("likelihood","bart","expr")
toPlot = cbind(toPlot, rank(-toPlot$expr))
colnames(toPlot) = c("likelihood","bart","expr","rank_size")
ggplot(toPlot, aes(x=likelihood, y=bart, size = rank_size, fill=`Cancer Types`)) +
geom_point(alpha = 0.7, aes(colour=`Cancer Types`)) +
guides(col = guide_legend(ncol = 2)) +
scale_colour_manual(values = colors) +
scale_size(range = c(18, 2), name = "Relative Rank\nof Expression") +
ylab("Relative Rank Score (BART)") +
xlim(c(0,1)) + ylim(c(0,1)) +
theme_bw() +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10),
plot.title = element_text(face="bold", size = 16), axis.title.x = element_blank(),
axis.title.y = element_text(size=13), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
coord_fixed(ratio = 1) +
ggtitle(paste("Correlation between Bart Rank\nand Expression Level of", toCheck))+
guides(colour = guide_legend(override.aes = list(size=6)))
ggsave(paste(toCheck,'_scatter.png',sep = ""))
}
}
