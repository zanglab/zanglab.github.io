shearRate = c(0.111,1,2.7,5.75,7)
appV = c(450,137,97,58,58)
err = c(93,13,7,4,2)
table = cbind(shearRate,appV,err)
print(table)
ggplot(table)+geom_point(aes(x=shearRate,y=appV))
library("ggplot")
library("ggplot2")
ggplot(table)+geom_point(aes(x=shearRate,y=appV))
ggplot(as.dataframe(table))+geom_point(aes(x=shearRate,y=appV))
ggplot(as.matrix(table))+geom_point(aes(x=shearRate,y=appV))
ggplot(as.data.frame(table))+geom_point(aes(x=shearRate,y=appV))
ggplot(as.data.frame(table),aes(x = shearRate, y = appV)) +
geom_point() +
stat_smooth(method = 'nls', formula = 'y~a*x^b', start = list(a = 1,b=1),se=FALSE)
ggplot(as.data.frame(table),aes(x = shearRate, y = appV)) +
geom_point() +
stat_smooth(method = 'nls', formula = 'y~a*x^b')
ggplot(as.data.frame(table),aes(x = shearRate, y = appV)) +
geom_point() +
stat_smooth(method = 'nls', formula = 'y~a*x^b', start = list(a = 1,b=1),data=as.data.frame(table))
ggplot(as.data.frame(table),aes(x = shearRate, y = appV)) +
stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula= y~x)
lm_fit <- lm(appV ~ shearRate, data=as.data.frame(table))
summary(lm_fit)
predicted_df <- data.frame(mpg_pred = predict(lm_fit, as.data.frame(table)))
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_line(color='red',data = predicted_df, aes(x=mpg_pred, y=appV))
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_line(color='red',data = predicted_df, aes(x=shearRate, y=appV))
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "nls", se = FALSE)
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "auto", se = FALSE)
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "lm", formula=(y ~ cx^n + b) se = FALSE)
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "lm", formula=(y ~ cx^n + b), se = FALSE)
ggplot(data = as.data.frame(table), aes(x = shearRate, y = appV)) +
geom_point(color='blue') +
geom_smooth(method = "lm", formula=(log(y) ~ x
), se = FALSE)
library("ggplot2")
library("dplyr")
library("grid")
likelihood_table = read.csv("C:/Users/Student/Documents/Third Year/Zang Lab/likelihoodRatio.csv")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
head(likelihood_table)
rownames(likelihood_table) <- likelihood_table$X
head(likelihood_table)
library("ggplot2")
library("dplyr")
library("grid")
likelihood_table = read.csv("C:/Users/Student/Documents/Third Year/Zang Lab/likelihoodRatio.csv")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ*","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES*","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
rownames(likelihood_table) <- likelihood_table$X
likelihood_table <- likelihood_table[cancers]
head(likelihood_table)
#for(i in length(1:rownames(likelihood_table))){
#}
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ.","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES.","THCA","UCEC")
likelihood_table <- likelihood_table[cancers]
head(likelihood_table)
barplot(likelihood_table[1])
likelihood_table[1]
barplot(likelihood_table[1,])
likelihood_table[1,]
barplot(likelihood_table[1,])
barplot(as.numeric(as.vector(likelihood_table[1,])))
barplot(as.numeric(as.vector(likelihood_table[1,])), xlab = cancers)
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers)
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers, col = colors)
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers, col = colors, main = TFs[1])
TFs = rownames(likelihood_table)
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers, col = colors, main = TFs[1])
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers, col = colors, main = paste(TFs[1],"Likelihood Ratio"))
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers, col = colors, main = TFs[1], ylab = "Likelihood Ratio")
library("ggplot2")
library("dplyr")
library("grid")
setwd('C:/Users/Student/Documents/Third Year/Zang Lab/Post_Clustering/likelihood_barPlot')
likelihood_table = read.csv("C:/Users/Student/Documents/Third Year/Zang Lab/likelihoodRatio.csv")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ.","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES.","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
rownames(likelihood_table) <- likelihood_table$X
likelihood_table <- likelihood_table[cancers]
TFs = rownames(likelihood_table)
barplot(as.numeric(as.vector(likelihood_table[1,])), names.arg = cancers, col = colors, main = TFs[1], ylab = "Likelihood Ratio")
for(i in length(1:rownames(likelihood_table))){
grid.newpage()
png(paste(TFs[i],'_bar.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1))
try(barplot(as.numeric(as.vector(likelihood_table[i,])), names.arg = cancers, col = colors, main = TFs[i], ylab = "Likelihood Ratio"))
dev.off()
}
for(i in length(1:rownames(likelihood_table))){
grid.newpage()
png(paste(TFs[i],'_bar.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1))
try(barplot(as.numeric(as.vector(likelihood_table[i,])), names.arg = cancers, col = colors, main = TFs[i], ylab = "Likelihood Ratio"))
dev.off()
}
for(i in 1:length(rownames(likelihood_table))){
grid.newpage()
png(paste(TFs[i],'_bar.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1))
try(barplot(as.numeric(as.vector(likelihood_table[i,])), names.arg = cancers, col = colors, main = TFs[i], ylab = "Likelihood Ratio"))
dev.off()
}
