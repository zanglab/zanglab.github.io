grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780, height = 293, units = "px", res = 800, pointsize = 4.5, type="cairo", antialias = "none")
par(cex.lab =1, cex.main = 1, cex.axis = 1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", names.arg = cancers, cex.names = 0.7,las = 2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780, height = 293, units = "px",  pointsize = 4.5, type="cairo", antialias = "none")
par(cex.lab =1, cex.main = 1, cex.axis = 1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", names.arg = cancers, cex.names = 0.7,las = 2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780, height = 293, units = "px",  pointsize = 4.5, type="cairo", antialias = "none")
par(cex.lab =1, cex.main = 1, cex.axis = 1,,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", names.arg = cancers, cex.names = 0.7,las = 2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780, height = 293, units = "px",  pointsize = 4.5, type="cairo", antialias = "none")
par(cex.lab =1, cex.main = 1, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", names.arg = cancers, cex.names = 0.7,las = 2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)"))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", las = 2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", las = 2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,9,9))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", las = 2))
dev.off()
for(i in 1:length(rownames(bartTFs))){
toCheck = (toString(bartTFs$TF[i]));
if(toCheck %in% logBLCA$geneSymbol){
addBLCA = t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6)
addBRCA_1 = t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6)
addBRCA_2 = t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6)
addCOAD_READ = t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6)
addHNSC = t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6)
addKICH = t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6)
addKIRC = t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6)
addKIRP = t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6)
addLIHC = t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6)
addLUAD = t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6)
addLUSC = t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6)
addPRAD = t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6)
addSTES = t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6)
addTHCA = t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6)
addUCEC = t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6)
toDisp <- c("addBLCA","addBRCA_1","addBRCA_2","addCOAD_READ","addHNSC",
"addKICH","addKIRC","addKIRP","addLIHC","addLUAD",
"addLUSC","addPRAD",
"addSTES","addTHCA","addUCEC")
dataList <- lapply(toDisp,get,envir=environment())
names(dataList)<-cancers
#turn down the resolution pleaseeeeeeeeeeeeeeeeee
#maybe ggplot will make it look better so i can include a y-axis too
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/ViolinPlots")
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 8, height = 3, units = "in", res = 800, pointsize = 4)
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)"))
dev.off()
}
}
colnames(tf_df)<-c("TF",cancers)
library("ggplot2")
library("dplyr")
library("grid")
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/BART_results")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
cancer = 'BLCA'
data = read.csv(paste(cancer,"_up_bart.csv", sep=""))
tf_df = data.frame(matrix(ncol = 16, nrow = 918))
colnames(tf_df)<-c("TF",cancers)
tf_df$TF <- data$TF
tf_df[,2] = data$re_rank
tf_df <- tf_df[order(tf_df$TF),]
for(i in 2:length(cancers)){
data = read.csv(paste(cancers[i],"_up_bart.csv", sep=""))
data <- data[order(data$TF),]
tf_df[,(i+1)] = data$re_rank
}
tf_df[,2:16] = 1 - tf_df[,2:16]
rownames(tf_df) <- tf_df$TF
tf_df <- tf_df[cancers]
TFs = rownames(tf_df)
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/re_rank")
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 4.5, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1))
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1))
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 1, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1))
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 4, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.3)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 4, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.3)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), axis.lty=1))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.3)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), axis.lty = 1))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
try(axis(side = 1, lwd = 2))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
try(axis(side = 2, lwd = 0.3))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
try(axis(2, at = 0:1, lwd=0.2, lwd.tick=0, lab=F))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 0.5,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
try(axis(2, at = 0:1, lwd=0.2, lwd.tick=0, lab=F))
dev.off()
}
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*4, height = 293*4, units = "px", res = 800, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
cancers = c("BLCA","BRCA_1","BRCA_2", "C_R*","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 2,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.7,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1)))
dev.off()
}
library("ggplot2")
library("dplyr")
library("grid")
setwd('C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/likelihood_barPlot')
likelihood_table = read.csv("C:/Users/Student/Documents/Third Year/Zang Lab/likelihoodRatio.csv")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
rownames(likelihood_table) <- likelihood_table$X
likelihood_table <- likelihood_table[cancers]
View(likelihood_table)
View(likelihood_table)
library("ggplot2")
library("dplyr")
library("grid")
setwd('C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/likelihood_barPlot')
likelihood_table = read.csv("C:/Users/Student/Documents/Third Year/Zang Lab/likelihoodRatio.csv")
cancers = c("BLCA","BRCA_1","BRCA_2", "COAD_READ.","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES.","THCA","UCEC")
colors = c("#09BAB5", "#B509BA", "#09BA5C", "#5C09BA", "#F0F00D", "#F0600D", "#0DF0D1",
"#61BD83", "#BD6183", "#96BD61", "#451C62", "#9FC7D3", "#9FADD3", "#68250D", "#0D2F68")
rownames(likelihood_table) <- likelihood_table$X
likelihood_table <- likelihood_table[cancers]
TFs = rownames(likelihood_table)
cancers = c("BLCA","BRCA_1","BRCA_2", "C_R*","HNSC",
"KICH","KIRC","KIRP","LIHC","LUAD",
"LUSC","PRAD",
"STES","THCA","UCEC")
for(tf in TFs){
grid.newpage()
png(paste(tf,'_bar.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(likelihood_table[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "Likelihood Ratio", ylim = c(0,1)))
dev.off()
}
toCheck = "AFF4"
#toCheck = (toString(bartTFs$TF[i]));
if(toCheck %in% logBLCA$geneSymbol){
addBLCA = t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6)
addBRCA_1 = t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6)
addBRCA_2 = t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6)
addCOAD_READ = t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6)
addHNSC = t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6)
addKICH = t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6)
addKIRC = t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6)
addKIRP = t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6)
addLIHC = t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6)
addLUAD = t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6)
addLUSC = t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6)
addPRAD = t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6)
addSTES = t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6)
addTHCA = t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6)
addUCEC = t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6)
toDisp <- c("addBLCA","addBRCA_1","addBRCA_2","addCOAD_READ","addHNSC",
"addKICH","addKIRC","addKIRP","addLIHC","addLUAD",
"addLUSC","addPRAD",
"addSTES","addTHCA","addUCEC")
dataList <- lapply(toDisp,get,envir=environment())
names(dataList)<-cancers
#turn down the resolution pleaseeeeeeeeeeeeeeeeee
#maybe ggplot will make it look better so i can include a y-axis too
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/ViolinPlots")
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1.8, cex.main = 3, cex.axis = 1.3,mar=c(4,9,3,1), lwd = 0.4)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)"))
dev.off()
}
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1.3,mar=c(4,9,3,1), lwd = 0.1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)"))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1.3,mar=c(4,9,3,1), lwd = 0.1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.1))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1.3,mar=c(4,9,3,1), lwd = 0.1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.2))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1.3,mar=c(4,9,3,1), lwd = 0.1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.3))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5,mar=c(4,9,3,1), lwd = 0.1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.3))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1), lwd = 0.1)
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.3))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.4))
dev.off()
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/ViolinPlots")
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.35))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 4, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.35))
dev.off()
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/ViolinPlots")
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.35))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"), ylab = "log(FPKM+0.1)", lwd = 0.35,drawRect = F))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 0.65,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"),
ylab = "log(FPKM+0.1)", lwd = 0.35, axes = F))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"),
ylab = "log(FPKM+0.1)", lwd = 0.35, cex.names = 0.65))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"),
ylab = "log(FPKM+0.1)", lwd = 0.35, cex.names = 0.65, las = 1))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"),
ylab = "log(FPKM+0.1)", lwd = 0.35, cex.names = 0.65, las = 1, xaxt="n"))
dev.off()
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"),
ylab = "log(FPKM+0.1)", lwd = 0.35, cex.names = 0.65, las = 1, axes=F))
dev.off()
for(i in 1:length(rownames(bartTFs))){
toCheck = (toString(bartTFs$TF[i]));
if(toCheck %in% logBLCA$geneSymbol){
addBLCA = t(logBLCA[which(logBLCA$geneSymbol == toCheck), 1:((length(colnames(logBLCA)))-1)])+rnorm(((length(colnames(logBLCA)))-1),0,1e-6)
addBRCA_1 = t(logBRCA_1[which(logBRCA_1$geneSymbol == toCheck), 1:((length(colnames(logBRCA_1)))-1)])+rnorm(((length(colnames(logBRCA_1)))-1),0,1e-6)
addBRCA_2 = t(logBRCA_2[which(logBRCA_2$geneSymbol == toCheck), 1:((length(colnames(logBRCA_2)))-1)])+rnorm(((length(colnames(logBRCA_2)))-1),0,1e-6)
addCOAD_READ = t(logCOAD_READ[which(logCOAD_READ$geneSymbol == toCheck), 1:((length(colnames(logCOAD_READ)))-1)])+rnorm(((length(colnames(logCOAD_READ)))-1),0,1e-6)
addHNSC = t(logHNSC[which(logHNSC$geneSymbol == toCheck), 1:((length(colnames(logHNSC)))-1)])+rnorm(((length(colnames(logHNSC)))-1),0,1e-6)
addKICH = t(logKICH[which(logKICH$geneSymbol == toCheck), 1:((length(colnames(logKICH)))-1)])+rnorm(((length(colnames(logKICH)))-1),0,1e-6)
addKIRC = t(logKIRC[which(logKIRC$geneSymbol == toCheck), 1:((length(colnames(logKIRC)))-1)])+rnorm(((length(colnames(logKIRC)))-1),0,1e-6)
addKIRP = t(logKIRP[which(logKIRP$geneSymbol == toCheck), 1:((length(colnames(logKIRP)))-1)])+rnorm(((length(colnames(logKIRP)))-1),0,1e-6)
addLIHC = t(logLIHC[which(logLIHC$geneSymbol == toCheck), 1:((length(colnames(logLIHC)))-1)])+rnorm(((length(colnames(logLIHC)))-1),0,1e-6)
addLUAD = t(logLUAD[which(logLUAD$geneSymbol == toCheck), 1:((length(colnames(logLUAD)))-1)])+rnorm(((length(colnames(logLUAD)))-1),0,1e-6)
addLUSC = t(logLUSC[which(logLUSC$geneSymbol == toCheck), 1:((length(colnames(logLUSC)))-1)])+rnorm(((length(colnames(logLUSC)))-1),0,1e-6)
addPRAD = t(logPRAD[which(logPRAD$geneSymbol == toCheck), 1:((length(colnames(logPRAD)))-1)])+rnorm(((length(colnames(logPRAD)))-1),0,1e-6)
addSTES = t(logSTES[which(logSTES$geneSymbol == toCheck), 1:((length(colnames(logSTES)))-1)])+rnorm(((length(colnames(logSTES)))-1),0,1e-6)
addTHCA = t(logTHCA[which(logTHCA$geneSymbol == toCheck), 1:((length(colnames(logTHCA)))-1)])+rnorm(((length(colnames(logTHCA)))-1),0,1e-6)
addUCEC = t(logUCEC[which(logUCEC$geneSymbol == toCheck), 1:((length(colnames(logUCEC)))-1)])+rnorm(((length(colnames(logUCEC)))-1),0,1e-6)
toDisp <- c("addBLCA","addBRCA_1","addBRCA_2","addCOAD_READ","addHNSC",
"addKICH","addKIRC","addKIRP","addLIHC","addLUAD",
"addLUSC","addPRAD",
"addSTES","addTHCA","addUCEC")
dataList <- lapply(toDisp,get,envir=environment())
names(dataList)<-cancers
#turn down the resolution pleaseeeeeeeeeeeeeeeeee
#maybe ggplot will make it look better so i can include a y-axis too
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/ViolinPlots")
grid.newpage()
png(paste(toCheck,'_vioPlot.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.main = 1.5, cex.axis = 1,mar=c(4,9,3,1))
try(vioplot(dataList, col = colors, main = paste(toCheck, "Expression Level"),
ylab = "log(FPKM+0.1)", lwd = 0.35, cex.names = 0.65, las = 1))
dev.off()
}
}
tf = "AFF4"
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), main = "AFF4 Rank"))
dev.off()
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/re_rank")
tf = "AFF4"
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), main = "AFF4 Rank"))
dev.off()
setwd('C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/likelihood_barPlot')
tf = "AFF4"
grid.newpage()
png(paste(tf,'_bar.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(likelihood_table[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "Likelihood Ratio", ylim = c(0,1)))
dev.off()
tf = "AFF4"
grid.newpage()
png(paste(tf,'_bar.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(likelihood_table[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "Likelihood Ratio", ylim = c(0,1), main = "AFF4 Likelihood Ratio"))
dev.off()
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/re_rank")
for(tf in TFs){
tf = "AFF4"
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), main = paste(tf, " Rank")))
dev.off()
}
setwd('C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/likelihood_barPlot')
for(tf in TFs){
grid.newpage()
png(paste(tf,'_bar.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(likelihood_table[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "Likelihood Ratio", ylim = c(0,1), main = paste(tf, " Likelihood Ratio")))
dev.off()
}
for(tf in TFs){
grid.newpage()
png(paste(tf,'_bar.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(likelihood_table[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "Likelihood Ratio", ylim = c(0,1), main = paste(tf, "Likelihood Ratio")))
dev.off()
}
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/re_rank")
for(tf in TFs){
tf = "AFF4"
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), main = paste(tf, "Rank")))
dev.off()
}
setwd("C:/Users/Student/Documents/Third Year/Spring/bart_results_website/imgs/re_rank")
for(tf in TFs){
grid.newpage()
png(paste(tf,'_re_rank.png',sep = ""), width = 780*2, height = 293*2, units = "px", res = 600, pointsize = 3, type="cairo",antialias = "none")
par(cex.lab =1, cex.axis = 1,mar=c(4,9,3,1), lwd = 0.4)
try(barplot(as.numeric(as.vector(tf_df[tf,])), names.arg = cancers, cex.names = 0.65,las = 1,
col = colors, ylab = "1 - Relative Rank", ylim = c(0,1), main = paste(tf, "Rank")))
dev.off()
}
